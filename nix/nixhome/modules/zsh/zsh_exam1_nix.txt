{ config, lib, pkgs, ... }:

{
  programs.zsh = {
    enable = true;
    enableCompletion = true;
    autosuggestion.enable = true;
    syntaxHighlighting.enable = true;
    
    # Shell options
    defaultKeymap = "emacs";
    
    # History configuration
    history = {
      size = 10000;
      save = 10000;
      path = "${config.xdg.dataHome}/zsh/history";
      ignoreDups = true;
      ignoreSpace = true;
      expireDuplicatesFirst = true;
      share = true;
    };
    
    # Environment variables
    sessionVariables = {
      EDITOR = "nvim";
      BROWSER = "firefox";
      TERMINAL = "alacritty";
    };
    
    # Shell aliases
    shellAliases = {
      # Basic commands
      ll = "ls -alF";
      la = "ls -A";
      l = "ls -CF";
      
      # Git shortcuts
      g = "git";
      gs = "git status";
      ga = "git add";
      gc = "git commit";
      gp = "git push";
      gl = "git pull";
      gd = "git diff";
      gb = "git branch";
      gco = "git checkout";
      
      # Navigation
      ".." = "cd ..";
      "..." = "cd ../..";
      "...." = "cd ../../..";
      
      # System shortcuts
      grep = "grep --color=auto";
      fgrep = "fgrep --color=auto";
      egrep = "egrep --color=auto";
      
      # NixOS specific
      rebuild = "sudo nixos-rebuild switch";
      home-rebuild = "home-manager switch";
      nix-search = "nix search nixpkgs";
      
      # Modern replacements
      cat = "bat";
      ls = "exa";
      find = "fd";
      
      # Docker shortcuts
      d = "docker";
      dc = "docker-compose";
      
      # Other useful shortcuts
      weather = "curl wttr.in";
      myip = "curl ifconfig.me";
      ports = "netstat -tulanp";
    };
    
    # Custom functions
    initExtra = ''
      # Custom functions
      mkcd() {
        mkdir -p "$1" && cd "$1"
      }
      
      # Extract function for various archive formats
      extract() {
        if [ -f $1 ] ; then
          case $1 in
            *.tar.bz2)   tar xjf $1     ;;
            *.tar.gz)    tar xzf $1     ;;
            *.bz2)       bunzip2 $1     ;;
            *.rar)       unrar e $1     ;;
            *.gz)        gunzip $1      ;;
            *.tar)       tar xf $1      ;;
            *.tbz2)      tar xjf $1     ;;
            *.tgz)       tar xzf $1     ;;
            *.zip)       unzip $1       ;;
            *.Z)         uncompress $1  ;;
            *.7z)        7z x $1        ;;
            *)     echo "'$1' cannot be extracted via extract()" ;;
          esac
        else
          echo "'$1' is not a valid file"
        fi
      }
      
      # Quick search function
      qfind() {
        find . -name "*$1*"
      }
      
      # Git commit with message
      gcm() {
        git commit -m "$1"
      }
      
      # Git add all and commit with message
      gacm() {
        git add . && git commit -m "$1"
      }
      
      # Create and switch to git branch
      gcb() {
        git checkout -b "$1"
      }
      
      # Update system
      update() {
        echo "Updating NixOS..."
        sudo nixos-rebuild switch --upgrade
        echo "Updating Home Manager..."
        home-manager switch
      }
      
      # Colorful man pages
      man() {
        env LESS_TERMCAP_mb=$'\e[1;31m' \
            LESS_TERMCAP_md=$'\e[1;31m' \
            LESS_TERMCAP_me=$'\e[0m' \
            LESS_TERMCAP_se=$'\e[0m' \
            LESS_TERMCAP_so=$'\e[1;44;33m' \
            LESS_TERMCAP_ue=$'\e[0m' \
            LESS_TERMCAP_us=$'\e[1;32m' \
            man "$@"
      }
      
      # Auto-complete for aliases
      compdef g=git
      compdef d=docker
      compdef dc=docker-compose
      
      # Custom prompt (if not using starship or similar)
      autoload -U colors && colors
      
      # Set window title
      precmd() {
        print -Pn "\e]0;%n@%m: %~\a"
      }
      
      # Key bindings
      bindkey '^[[1;5C' forward-word     # Ctrl+Right
      bindkey '^[[1;5D' backward-word    # Ctrl+Left
      bindkey '^[[3~' delete-char        # Delete
      bindkey '^[[H' beginning-of-line   # Home
      bindkey '^[[F' end-of-line         # End
      
      # FZF integration (if available)
      if command -v fzf >/dev/null 2>&1; then
        source <(fzf --zsh)
      fi
    '';
    
    # Oh My Zsh configuration (optional)
    oh-my-zsh = {
      enable = true;
      plugins = [
        "git"
        "sudo"
        "docker"
        "kubectl"
        "systemd"
        "z"
        "colored-man-pages"
        "command-not-found"
      ];
      theme = "robbyrussell"; # You can change this to your preferred theme
    };
    
    # Additional completion settings
    completionInit = ''
      autoload -U compinit
      compinit
      
      # Case insensitive completion
      zstyle ':completion:*' matcher-list 'm:{a-z}={A-Za-z}'
      
      # Menu completion
      zstyle ':completion:*' menu select
      
      # Colored completion
      zstyle ':completion:*' list-colors ''${(s.:.)LS_COLORS}
      
      # Complete . and .. special directories
      zstyle ':completion:*' special-dirs true
      
      # Complete processes for kill command
      zstyle ':completion:*:*:kill:*:processes' list-colors '=(#b) #([0-9]#) ([0-9a-z-]#)*=01;34=0=01'
      zstyle ':completion:*:*:*:*:processes' command "ps -u $USER -o pid,user,comm -w -w"
      
      # SSH completion
      zstyle ':completion:*:(ssh|scp|rsync):*' tag-order 'hosts:-host:host hosts:-domain:domain hosts:-ipaddr:ip\ address *'
      zstyle ':completion:*:(scp|rsync):*' group-order users files all-files hosts-domain hosts-host hosts-ipaddr
    '';
  };
  
  # Additional packages that work well with zsh
  home.packages = with pkgs; [
    # Modern CLI tools
    bat          # Better cat
    exa          # Better ls
    fd           # Better find
    ripgrep      # Better grep
    fzf          # Fuzzy finder
    tree         # Directory tree
    htop         # Process viewer
    neofetch     # System info
    
    # Development tools
    git
    curl
    wget
    jq           # JSON processor
    
    # Archive tools
    unzip
    p7zip
  ];
}
