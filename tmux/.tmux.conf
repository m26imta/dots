# Function to check if the current window is maximized
# is_window_maximized() {
#   if tmux display-message -p '#{window_zoomed_flag}' | grep -q 1; then
#     echo "true"
#   else
#     echo "false"
#   fi
# }

# Function to check if the current pane is maximized
# is_maximized() {
#   # Get the current pane ID
#   current_pane=$(tmux display-message -p '#D')
#
#   # Get the list of all panes in the current window
#   panes=$(tmux list-panes -F '#D')
#
#   # Check if the current pane is the only pane in the list
#   if [ "$(echo "$panes" | wc -l)" -eq 1 ]; then
#     tmux display-message "The pane is maximized."
#   else
#     tmux display-message "The pane is not maximized."
#   fi
# }
# # Bind the function to a key combination, e.g., Prefix + M
# bind-key M run-shell 'is_maximized'
#

set -g mouse on
setw -g mode-keys vi

# remap prefix from 'C-b' to 'C-a'
#unbind C-b
#set-option -g prefix C-a
#bind-key C-a send-prefix

# disable confirm on kill windows / kill pane
bind & kill-window
bind x kill-pane
bind C-x kill-pane
bind -n C-M-x kill-pane

set -sg escape-time 0
set -g status-interval 0

# split panes using \ and -
unbind '"'
unbind %
bind \\ split-window -h
bind - split-window -v
bind | split-window -v

bind -n C-M-n next-window
bind -n C-M-p prev
bind -n M-m resize-pane -Z
bind -n C-M-m resize-pane -Z
# Bind Ctrl+Alt+m to toggle maximize/minimize current window
# bind-key -n C-M-m if-shell -b '[ $(is_window_maximized) = "true" ]' \
#                       'resize-pane -Z' \
#                       'resize-pane -Z'

# switch panes using Alt-arrow without prefix(-n flag)
bind -n M-Left select-pane -L
bind -n M-Right select-pane -R
bind -n M-Up select-pane -U
bind -n M-Down select-pane -D

# bind -n M-h select-pane -L
# bind -n M-l select-pane -R
# bind -n M-k select-pane -U
# bind -n M-j select-pane -D

bind -n C-M-h select-pane -L
bind -n C-M-l select-pane -R
bind -n C-M-k select-pane -U
bind -n C-M-j select-pane -D

